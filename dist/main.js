(()=>{"use strict";const t="https://rickandmortyapi.com/api/character/",n=async n=>{const a=n?`${t}${n}`:t;try{const t=await fetch(a);return await t.json()}catch(t){console.log("Fetch Error",t)}},a=()=>location.hash.slice(1).toLocaleLowerCase().split("/")[1]||"/",e=()=>'\n\t\t<div class="Error404">\n\t\t\t<h2>Error 404</h2>\n\t\t</div>\n\t',s={"/":async()=>`\n        <div class="Characters">\n            ${(await n()).results.map((t=>`\n                <article class="Character-item">\n                    <a href="#/${t.id}/">\n                        <img src="${t.image}" alt="${t.name}">\n                        <h2>${t.name}</h2>\n                    </a>\n                </article>\n            `)).join("")}\n        </div>\n    `,"/:id":async()=>{const t=a(),e=await n(t);return`\n\t\t<div class="Characters-inner">\n\t\t\t<article class="Characters-card">\n\t\t\t\t<img src="${e.image}" alt="${e.name}" />\n\t\t\t\t<h2>${e.name}</h2>\n\t\t\t</article>\n\t\t\t<article class="Characters-card">\n\t\t\t\t<h3>Episodes: <span>${e.episode.length}</span></h3>\n\t\t\t\t<h3>Status: <span>${e.status}</span></h3>\n\t\t\t\t<h3>Species: <span>${e.specie}</span></h3>\n\t\t\t\t<h3>Gender: ${e.gender}</h3>\n\t\t\t\t<h3>Origin: ${e.origin.name}</h3>\n\t\t\t\t<h3>Last Location: <span>${e.location.name}</span></h3>\n\t\t\t</article>\n\t\t</div>\n\t`},"/contact":"Contact"},i=async()=>{const t=document.getElementById("header"),n=document.getElementById("content");t.innerHTML=await'\n        <div class="Header-main">\n            <div class="Header-logo">\n                <h1>\n                    <a href="#">\n                        100tifi.co\n                    </a>\n                </h1>\n            </div>\n            <div class="Header-nav">\n                <a href="#/about">\n                    About\n                </a>\n            </div>\n        </div>  \n    ';let i=a(),c=await(t=>t.length<=3?"/"===t?t:"/:id":`/${t}`)(i),r=s[c]?s[c]:e;n.innerHTML=await r()};window.addEventListener("load",i),window.addEventListener("hashchange",i)})();